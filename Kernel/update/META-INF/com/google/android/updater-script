assert(getprop("ro.product.device") == "SPH-D700" ||
	getprop("ro.build.product") == "SPH-D700");

ui_print("");ui_print("");ui_print("");ui_print("");ui_print("");
ui_print("");ui_print("");ui_print("");ui_print("");ui_print("");
ui_print("                                @@@@@");
ui_print("                                @@@@@");
ui_print("                                  @@@");
ui_print("                                  @@@");
ui_print("                                  @@@");
ui_print("                                  @@@");
ui_print("                                  @@@");
ui_print("            @@@@@@@@@@@@@         @@@");
ui_print("            @@@@@@@@@@@@@         @@@");
ui_print("                                  @@@");
ui_print("                                  @@@");
ui_print("            @@@@@@@@@@@@@         @@@");
ui_print("            @@@@@@@@@@@@@         @@@");
ui_print("                                  @@@");
ui_print("                                  @@@");
ui_print("                                  @@@");
ui_print("                                @@@@@");
ui_print("                                @@@@@");
ui_print("");ui_print("");ui_print("");
ui_print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
ui_print("@          Brought to you by nubecoder         @");
ui_print("@               www.nubecoder.com              @");
ui_print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
ui_print("");ui_print("");ui_print("");ui_print("");sleep(5);
ui_print("");ui_print("");ui_print("");ui_print("");ui_print("");
ui_print("");ui_print("");ui_print("");ui_print("");ui_print("");
ui_print("");ui_print("");ui_print("");ui_print("");ui_print("");
ui_print("");ui_print("");ui_print("");ui_print("");ui_print("");
ui_print("");ui_print("");ui_print("");ui_print("");ui_print("");
ui_print("");ui_print("");sleep(1);


ui_print("");
ui_print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
ui_print("@             nubernel-kernel v0.0.0           @");
ui_print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
ui_print("");
ui_print("Your screen will flash while updating.");
sleep(2);

ui_print("");
ui_print("Flashing kernel image.");
ui_print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
assert(delete("/sbin/reboot"),
	package_extract_file("redbend_ua", "/tmp/redbend_ua"),
	package_extract_file("zImage", "/tmp/zImage"));
set_perm(0, 0, 0755, "/tmp/redbend_ua");
assert(run_program("/tmp/redbend_ua", "restore", "/tmp/zImage", "/dev/block/bml7"));
sleep(0.5);
ui_print("");
ui_print("Finished.");
ui_print("@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@");
sleep(3);
ui_print("");

