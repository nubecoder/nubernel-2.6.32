#!/system/bin/sh
#
# kernelFlash
# For use with wifiFlashHelper.sh
#
#
# 2011 nubecoder
# http://www.nubecoder.com/
#

#define defaults
USE_BMLWRITE="n"
DO_KERNEL="n"
DO_RECOVERY="n"

#define paths
TMP_PATH="/data/local/tmp"
BLOCK_PATH="/dev/block"

ZIMAGE="$TMP_PATH/zImage"
RECOVERY_ZIMAGE="$TMP_PATH/zImage_recovery"

KERNEL_PARTITION="$BLOCK_PATH/bml7"
RECOVERY_PARTITION="$BLOCK_PATH/bml8"

REDBEND="$TMP_PATH/redbend_ua"
BMLWRITE="$TMP_PATH/bmlwrite"


#define cmds
REDBEND_DO_KERNEL="$REDBEND restore $ZIMAGE $KERNEL_PARTITION"
REDBEND_DO_RECOVERY="$REDBEND restore $RECOVERY_ZIMAGE $RECOVERY_PARTITION"

BMLWRITE_DO_KERNEL="$BMLWRITE $ZIMAGE $KERNEL_PARTITION"
BMLWRITE_DO_RECOVERY="$BMLWRITE $RECOVERY_ZIMAGE $RECOVERY_PARTITION"

# functions
SHOW_HELP()
{
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	echo "Usage options for $0:"
	echo "-b : Use bmlwrite for flashing (redbend_ua is default)."
	echo "-h : Print this help info."
	echo "-k : Flash a kernel to bml7."
	echo "-r : Flash a recovery to bml8."
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	exit 1
}
SHOW_SETTINGS()
{
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	if [ "$USE_BMLWRITE" = "y" ] ; then
		echo "Flash with       == bmlwrite."
	else
		echo "Flash with       == redbend_ua."
	fi
	echo "Flash a kernel   == $DO_KERNEL"
	echo "Flash a recovery == $DO_RECOVERY"
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	echo "*"
}
SHOW_COMPLETED()
{
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	echo "Script completed."
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
exit
}
SHOW_ERROR()
{
	if [ -n "$ERROR_MSG" ] ; then
		echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
		echo "$ERROR_MSG"
	fi
}

FLASH_TO_BML7()
{
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	local T1=$(date +%s)
	if [ "$USE_BMLWRITE" = "y" ] ; then
		echo "Begin kernel flash with bmlwrite..." && echo ""
		$BMLWRITE_DO_KERNEL > /dev/null
	else
		echo "Begin kernel flash with redbend_ua..." && echo ""
		$REDBEND_DO_KERNEL > /dev/null
	fi
	local T2=$(date +%s)
	echo "" && echo "Kernel flash took $(($T2 - $T1)) seconds."
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	echo "*"
}
FLASH_TO_BML8()
{
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	local T1=$(date +%s)
	if [ "$USE_BMLWRITE" = "y" ] ; then
		echo "Begin recovery flash with bmlwrite..." && echo ""
		$BMLWRITE_DO_RECOVERY > /dev/null
	else
		echo "Begin recovery flash with redbend_ua..." && echo ""
		$REDBEND_DO_RECOVERY > /dev/null
	fi
	local T2=$(date +%s)
	echo "" && echo "Recovery flash took $(($T2 - $T1)) seconds."
	echo "=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]=]"
	echo "*"
}

# main
while getopts  ":bhkr" flag
do
	case "$flag" in
	b)
		USE_BMLWRITE="y"
		;;
	h)
		SHOW_HELP
		;;
	k)
		DO_KERNEL="y"
		;;
	r)
		DO_RECOVERY="y"
		;;
	*)
		ERROR_MSG="Error:: problem with option '$OPTARG'"
		SHOW_ERROR
		SHOW_HELP
		;;
	esac
done

# show current settings
SHOW_SETTINGS

if [ "$DO_KERNEL" = "y" ] ; then
	if [ -f $ZIMAGE ] ; then
		FLASH_TO_BML7
	fi
fi

if [ "$DO_RECOVERY" = "y" ] ; then
	if [ -f $ZIMAGE ] ; then
		FLASH_TO_BML8
	fi
fi

if [ "$DO_KERNEL" = "n" -a "$DO_RECOVERY" = "n" ] ; then
	SHOW_HELP
fi

SHOW_COMPLETED

